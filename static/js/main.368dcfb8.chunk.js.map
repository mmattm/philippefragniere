{"version":3,"sources":["utils.js","components/Img.js","components/Slide.js","components/Thumbs.js","components/Main.js","components/Slides.js","App.js","serviceWorker.js","index.js"],"names":["slugify","str","replace","toLowerCase","from","i","l","length","RegExp","charAt","Img","state","loaded","onLoad","setState","this","className","src","props","alt","React","Component","Slide","id","prev","next","fields","slides","isAnimated","setDirection","muted","setSlideDisplayed","history","useHistory","location","useLocation","map","obj","index","label","pathname","Helmet","key","onClick","undefined","e","event","clientX","view","innerWidth","push","video","url","playing","loop","playsinline","width","height","config","file","attributes","autoPlay","photo","thumbnails","large","breakpointColumnsObj","default","1100","700","500","Thumbs","toggleThumbs","items","slide","path","breakpointCols","columnClassName","Main","showThumbs","currentRoute","routes","find","route","withLabel","href","Slides","onEnter","onExited","direction","slideDirection","list","s","displayed","fetched","bind","fetch","then","res","json","records","forEach","element","concat","catch","error","console","log","basename","process","exact","to","match","CSSTransition","in","timeout","enter","exit","classNames","unmountOnExit","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.368dcfb8.chunk.js","sourcesContent":["export function slugify(str) {\n  str = str.replace(/^\\s+|\\s+$/g, \"\"); // trim\n  str = str.toLowerCase();\n\n  // remove accents, swap ñ for n, etc\n  var from = \"àáäâèéëêìíïîòóöôùúüûñç·/_,:;\";\n  var to = \"aaaaeeeeiiiioooouuuunc------\";\n  for (var i = 0, l = from.length; i < l; i++) {\n    str = str.replace(new RegExp(from.charAt(i), \"g\"), to.charAt(i));\n  }\n\n  str = str\n    .replace(/[^a-z0-9 -]/g, \"\") // remove invalid chars\n    .replace(/\\s+/g, \"-\") // collapse whitespace and replace by -\n    .replace(/-+/g, \"-\"); // collapse dashes\n\n  return str;\n}\n\nexport function makeTitle(slug) {\n  var words = slug.split(\"-\");\n\n  for (var i = 0; i < words.length; i++) {\n    var word = words[i];\n    words[i] = word.charAt(0) + word.slice(1);\n  }\n\n  return words.join(\" \");\n}\n","import React from \"react\";\n\nexport default class Img extends React.Component {\n  state = {loaded: false};\n\n  onLoad = () => {\n    this.setState({loaded: true});\n  };\n\n  render() {\n    const {loaded} = this.state;\n\n    return (\n      <img\n        className={\"slide-visual\" + (loaded ? \" loaded\" : \"\")}\n        src={this.props.src}\n        alt={this.props.alt}\n        onLoad={this.onLoad}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {slugify} from \"../utils\";\nimport Img from \"./Img\";\nimport {Helmet} from \"react-helmet\";\nimport ReactPlayer from \"react-player\";\n\nfunction Slide({\n  id,\n  fields,\n  slides,\n  isAnimated,\n  setDirection,\n  setSlideDisplayed,\n  muted\n}) {\n  let history = useHistory();\n  let location = useLocation();\n  let current, prev, next;\n\n  slides.map((obj, index) => {\n    if (\"/\" + slugify(obj.fields.label) === location.pathname) {\n      current = slides[index];\n      prev = slides[index - 1] ? slides[index - 1] : slides[slides.length - 1];\n      next = slides[index + 1] ? slides[index + 1] : slides[0];\n    }\n    return null;\n  });\n\n  /*\n  React.useEffect(() => {\n    //for (var slide of [current, prev, next]) setSlideDisplayed(slide);\n    //preloadImg(prev, next);\n  }, [location]);\n\n  //preloadImg(prev, next);\n\n  function preloadImg() {\n    for (var img of arguments) {\n      if (img.fields && !img.displayed) {\n        console.log(\"preload\");\n        const temp_img = new Image();\n        temp_img.src = img.fields.photo[0].thumbnails.large.url;\n      }\n    }\n  }*/\n\n  function changeSlide(event) {\n    if (event.clientX < event.view.innerWidth / 2) {\n      setDirection(\"left\");\n      history.push({\n        pathname: \"/\" + slugify(prev.fields.label),\n        state: {}\n      });\n    } else {\n      setDirection(\"right\");\n      history.push({\n        pathname: \"/\" + slugify(next.fields.label),\n        state: {}\n      });\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Philippe Fragniere — {fields.label}</title>\n      </Helmet>\n      <div\n        className=\"slide-item\"\n        key={fields.id}\n        onClick={isAnimated ? undefined : e => changeSlide(e)}\n        //  onMouseMove={e => mouseMove(e)}\n      >\n        {fields.video ? (\n          <ReactPlayer\n            url={fields.video[0].url}\n            playing={!isAnimated}\n            loop={true}\n            playsinline={true}\n            width=\"100%\"\n            height=\"100%\"\n            //onClick={unmute}\n            className=\"slide-visual loaded video\"\n            config={{\n              file: {\n                attributes: {\n                  autoPlay: true,\n                  muted: muted\n                }\n              }\n            }}\n            // onReady={e => handleOnReady())}\n            // onStart={e => console.log(\"start\")}\n          />\n        ) : null}\n        {fields.photo && !fields.video ? (\n          <Img src={fields.photo[0].thumbnails.large.url} alt={fields.label} />\n        ) : null}\n        {!fields.video && !fields.photo ? \"No visuals\" : null}\n      </div>\n    </>\n  );\n}\n\nexport default Slide;\n","import React from \"react\";\nimport Masonry from \"react-masonry-css\";\nimport Img from \"./Img\";\nimport {slugify} from \"../utils\";\n\nimport {useHistory} from \"react-router-dom\";\n\nconst breakpointColumnsObj = {\n  default: 9,\n  1100: 6,\n  700: 3,\n  500: 2\n};\n\nfunction Thumbs({slides, setDirection, toggleThumbs}) {\n  let history = useHistory();\n\n  function toggleImage(path) {\n    setDirection(\"fade\");\n    history.push({\n      pathname: path,\n      state: {}\n    });\n    toggleThumbs();\n  }\n\n  const items = slides.map(function(slide) {\n    return (\n      <div\n        className=\"grid-item\"\n        key={slide.id}\n        onClick={() => toggleImage(\"/\" + slugify(slide.fields.label))}\n      >\n        {slide.fields.photo ? (\n          <Img\n            src={slide.fields.photo[0].thumbnails.large.url}\n            alt={slide.fields.label}\n          />\n        ) : (\n          \"No visuals\"\n        )}\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <div className=\"gallery\">\n        <div className=\"gallery-content\">\n          <Masonry\n            breakpointCols={breakpointColumnsObj}\n            className=\"grid\"\n            columnClassName=\"grid_column\"\n          >\n            {items}\n          </Masonry>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default Thumbs;\n","import React from \"react\";\nimport {useLocation} from \"react-router-dom\";\nimport Thumbs from \"./Thumbs\";\n\nfunction Main({state, showThumbs, toggleThumbs, setDirection}) {\n  let location = useLocation();\n\n  function currentRoute() {\n    return state.routes.find(function(route) {\n      return route.path === location.pathname;\n    });\n  }\n\n  let label = \"Loading\";\n  if (currentRoute()) {\n    if (currentRoute().slide)\n      label = currentRoute().slide.fields.withLabel\n        ? currentRoute().slide.fields.label\n        : \"\";\n  }\n\n  return (\n    <>\n      <div className={showThumbs ? \"white\" : \"\"}>\n        {showThumbs ? (\n          <Thumbs\n            slides={state.slides}\n            setDirection={setDirection}\n            toggleThumbs={toggleThumbs}\n          />\n        ) : null}\n        <div className=\"fixed top-left\">\n          <h1>\n            {showThumbs ? <a href=\"#\">Bookings</a> : \"Philippe Fragnière\"}\n          </h1>\n        </div>\n        <div className=\"fixed top-right\">\n          <h2>\n            <span onClick={toggleThumbs} className=\"clickable\">\n              {showThumbs ? \"Close\" : \"More\"}\n            </span>\n          </h2>\n        </div>\n        <div className=\"fixed bottom-left\">\n          {showThumbs ? null : <h2>{label}</h2>}\n        </div>\n      </div>\n    </>\n  );\n}\nexport default Main;\n","import React from \"react\";\nimport {\n  BrowserRouter as HashRouter,\n  Router,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport {CSSTransition} from \"react-transition-group\";\nimport \"../App.scss\";\nimport Slide from \"./Slide\";\nimport Main from \"./Main\";\n\nimport {slugify} from \"../utils\";\n\nexport default class Slides extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      routes: [],\n      slides: [],\n      isAnimated: false,\n      slideDirection: \"fade\",\n      showThumbs: false,\n      fetched: false,\n      muted: true\n    };\n    this.onEnter = this.onEnter.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.setDirection = this.setDirection.bind(this);\n    this.toggleThumbs = this.toggleThumbs.bind(this);\n    this.setSlideDisplayed = this.setSlideDisplayed.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://api.airtable.com/v0/appqVNF1da0YQC1Tq/Photos?api_key=keyujqQNYZtE5jjIi&filterByFormula=NOT%28%7Bdraft%7D%29&sort%5B0%5D%5Bfield%5D=position&sort%5B0%5D%5Bdirection%5D=asc\"\n    )\n      .then(res => res.json())\n      .then(res => {\n        // ID slug instead of empty label\n        res.records.forEach((element, index) => {\n          element.fields.withLabel = true;\n          if (element.fields.label === undefined) {\n            element.fields.label = \"v-\" + element.id;\n            element.fields.withLabel = false;\n          }\n        });\n        this.setState({slides: res.records});\n\n        for (var slide of res.records) {\n          this.setState({\n            routes: this.state.routes.concat({\n              path: \"/\" + slugify(slide.fields.label),\n              slide: slide,\n              displayed: false\n            }),\n            slides: res.records,\n            isAnimated: false,\n            fetched: true\n          });\n        }\n      })\n      .catch(error => console.log(error));\n  }\n\n  onEnter = () => {\n    this.setState({\n      isAnimated: true,\n      muted: false\n    });\n  };\n  onExited = () => {\n    this.setState({\n      isAnimated: false,\n      muted: false\n    });\n  };\n  setDirection = direction => {\n    this.setState({\n      slideDirection: direction\n    });\n  };\n  toggleThumbs = () => {\n    this.setState({\n      showThumbs: !this.state.showThumbs\n    });\n  };\n  setSlideDisplayed = slide => {\n    this.setState(state => {\n      const list = state.slides.map(s =>\n        s === slide ? (slide.displayed = true) : null\n      );\n      return {\n        list\n      };\n    });\n  };\n\n  render() {\n    const {routes, slideDirection} = this.state;\n\n    return (\n      <>\n        <HashRouter basename={process.env.PUBLIC_URL}>\n          <Route exact path=\"/\">\n            {routes[0] ? (\n              <Redirect\n                push={true}\n                to={{pathname: routes[0].path, state: {}}}\n              />\n            ) : null}\n          </Route>\n\n          <Main\n            state={this.state}\n            showThumbs={this.state.showThumbs}\n            toggleThumbs={this.toggleThumbs}\n            setDirection={this.setDirection}\n          />\n          <div className={\"slider \" + slideDirection + \"-transition\"}>\n            {routes.map(({path, slide}) => (\n              <Route key={path} exact path={path}>\n                {({match}) => (\n                  <CSSTransition\n                    in={match != null}\n                    timeout={{enter: 800, exit: 800}}\n                    classNames=\"slide\"\n                    onEnter={this.onEnter}\n                    onExited={this.onExited}\n                    unmountOnExit\n                  >\n                    <div className=\"slide\">\n                      {\n                        <Slide\n                          {...slide}\n                          slides={this.state.slides}\n                          isAnimated={this.state.isAnimated}\n                          setDirection={this.setDirection}\n                          setSlideDisplayed={this.setSlideDisplayed}\n                          muted={this.state.muted}\n                        />\n                      }\n                    </div>\n                  </CSSTransition>\n                )}\n              </Route>\n            ))}\n          </div>\n        </HashRouter>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport Slides from \"./components/Slides\";\n\nfunction App() {\n  return (\n    <>\n      <Slides />\n    </>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./fonts.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}