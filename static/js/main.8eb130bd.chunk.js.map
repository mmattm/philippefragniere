{"version":3,"sources":["components/Spinner.js","components/Img.js","components/Slide.js","utils.js","components/Thumbs.js","components/Titles.js","components/Slider.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Spinner","placeholder","className","Img","src","alt","useState","loaded","setLoaded","fallback","onLoad","setTimeout","Slide","id","fields","Helmet","label","html","tmp","document","createElement","innerHTML","textContent","innerText","stripHtml","key","video","url","playing","loop","playsinline","width","height","config","file","attributes","autoPlay","muted","photo","thumbnails","large","breakpointColumnsObj","default","1100","700","500","Thumbs","props","items","slides","map","slide","index","onClick","toggleThumbs","dispatch","type","position","toggleImage","breakpointCols","columnClassName","Titles","showThumbs","href","dangerouslySetInnerHTML","__html","init","initialValue","anim","reducer","state","action","numItems","Error","Slider","res","initialPos","history","useHistory","location","useLocation","animated","value","setValue","animStart","animEnd","useTransitionEvent","swipeHandlers","useSwipeable","onSwipedLeft","onSwipedRight","onSwiping","setSwiping","preventDefaultTouchmoveEvent","trackMouse","swiping","useReducer","current","useEffect","push","pathname","records","path","handleUserKeyPress","event","keyCode","window","addEventListener","removeEventListener","dir","length","routes","exact","e","clientX","view","innerWidth","TransitionGroup","CSSTransition","timeout","classNames","onEntering","onExited","unmountOnExit","basename","process","Fetch","useFetch","method","mounted","useRef","initialSlide","setInitialSlide","forEach","element","undefined","title","str","replace","toLowerCase","from","i","l","RegExp","charAt","slugify","pos","findIndex","k","getPos","Main","App","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8eb130bd.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Spinner({placeholder}) {\n  return (\n    <div className=\"loader\">\n      <div className=\"spinner\" />\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React, {Suspense, useState} from \"react\";\nimport {Img as Simg} from \"react-suspense-img\";\nimport Spinner from \"./Spinner\";\n\nexport default function Img({src, alt}) {\n  const [loaded, setLoaded] = useState(false);\n\n  let onLoad = () => {\n    setTimeout(() => {\n      setLoaded(true);\n    }, 50);\n  };\n\n  return (\n    <Suspense fallback={<Spinner />}>\n      <Simg\n        src={src}\n        alt={alt}\n        onLoad={onLoad}\n        className={\"slide-visual\" + (loaded ? \" loaded\" : \"\")}\n      />\n    </Suspense>\n  );\n}\n","import React from \"react\";\nimport Img from \"./Img\";\nimport {Helmet} from \"react-helmet\";\nimport ReactPlayer from \"react-player\";\nimport {stripHtml} from \"../utils\";\n\nfunction Slide({id, fields}) {\n  /*\n  React.useEffect(() => {\n    //for (var slide of [current, prev, next]) setSlideDisplayed(slide);\n    //preloadImg(prev, next);\n  }, [location]);\n\n  //preloadImg(prev, next);\n\n  function preloadImg() {\n    for (var img of arguments) {\n      if (img.fields && !img.displayed) {\n        console.log(\"preload\");\n        const temp_img = new Image();\n        temp_img.src = img.fields.photo[0].thumbnails.large.url;\n      }\n    }\n  }*/\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Philippe Fragniere{\" \"}\n          {fields.label ? \" — \" + stripHtml(fields.label) : \"\"}\n        </title>\n      </Helmet>\n      <div className=\"slide\">\n        <div\n          className=\"slide-item\"\n          key={id}\n          //  onMouseMove={e => mouseMove(e)}\n        >\n          {fields.video && (\n            <ReactPlayer\n              url={fields.video[0].url}\n              playing={true}\n              loop={true}\n              playsinline={true}\n              width=\"100%\"\n              height=\"100%\"\n              //onClick={unmute}\n              className=\"slide-visual loaded video\"\n              config={{\n                file: {\n                  attributes: {\n                    autoPlay: true,\n                    muted: true\n                  }\n                }\n              }}\n            />\n          )}\n          {fields.photo && !fields.video && (\n            <Img\n              src={fields.photo[0].thumbnails.large.url}\n              alt={fields.label}\n            />\n          )}\n          {!fields.video && !fields.photo && \"No visuals\"}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Slide;\n","export function slugify(str) {\n  str = str.replace(/^\\s+|\\s+$/g, \"\"); // trim\n  str = str.toLowerCase();\n\n  // remove accents, swap ñ for n, etc\n  var from = \"àáäâèéëêìíïîòóöôùúüûñç·/_,:;\";\n  var to = \"aaaaeeeeiiiioooouuuunc------\";\n  for (var i = 0, l = from.length; i < l; i++) {\n    str = str.replace(new RegExp(from.charAt(i), \"g\"), to.charAt(i));\n  }\n\n  str = str\n    .replace(/[^a-z0-9 -]/g, \"\") // remove invalid chars\n    .replace(/\\s+/g, \"-\") // collapse whitespace and replace by -\n    .replace(/-+/g, \"-\"); // collapse dashes\n\n  return str;\n}\n\nexport function makeTitle(slug) {\n  var words = slug.split(\"-\");\n\n  for (var i = 0; i < words.length; i++) {\n    var word = words[i];\n    words[i] = word.charAt(0) + word.slice(1);\n  }\n\n  return words.join(\" \");\n}\n\nexport function stripHtml(html) {\n  var tmp = document.createElement(\"DIV\");\n  tmp.innerHTML = html;\n  return tmp.textContent || tmp.innerText || \"\";\n}\n","import React from \"react\";\nimport Masonry from \"react-masonry-css\";\nimport Img from \"./Img\";\n\nconst breakpointColumnsObj = {\n  default: 9,\n  1100: 6,\n  700: 3,\n  500: 2\n};\n\nfunction Thumbs(props) {\n  function toggleImage(index) {\n    props.toggleThumbs(false);\n    props.dispatch({type: \"set\", position: index});\n  }\n\n  const items = props.slides.map(function(slide, index) {\n    return (\n      <div\n        className=\"grid-item\"\n        key={slide.id}\n        onClick={() => toggleImage(index)}\n      >\n        {slide.fields.photo ? (\n          <Img\n            src={slide.fields.photo[0].thumbnails.large.url}\n            alt={slide.fields.label}\n          />\n        ) : (\n          \"No visuals\"\n        )}\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <div className=\"gallery\">\n        <div className=\"gallery-content\">\n          <Masonry\n            breakpointCols={breakpointColumnsObj}\n            className=\"grid\"\n            columnClassName=\"grid_column\"\n          >\n            {items}\n          </Masonry>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default Thumbs;\n","import React, {useState} from \"react\";\nimport Thumbs from \"./Thumbs\";\n\nfunction Titles({slides, label, dispatch}) {\n  const [showThumbs, toggleThumbs] = useState(false);\n  return (\n    <>\n      <div className={showThumbs ? \"white\" : \"\"}>\n        {showThumbs && (\n          <Thumbs\n            slides={slides}\n            toggleThumbs={toggleThumbs}\n            dispatch={dispatch}\n          />\n        )}\n        <div className=\"fixed top-left\">\n          <h1>\n            {showThumbs ? (\n              <a href=\"mailto:contact@philippefragniere.ch\">Bookings</a>\n            ) : (\n              \"Philippe Fragnière\"\n            )}\n          </h1>\n        </div>\n        <div className=\"fixed top-right\">\n          <h2 onClick={() => toggleThumbs(!showThumbs)} className=\"clickable\">\n            {showThumbs ? \"Close\" : \"More\"}\n          </h2>\n        </div>\n        <div\n          className=\"fixed bottom-left\"\n          dangerouslySetInnerHTML={{\n            __html: !showThumbs && label ? \"<h2>\" + label + \"</h2>\" : null\n          }}\n        />\n      </div>\n    </>\n  );\n}\nexport default Titles;\n","import React, {useState, useEffect, useReducer} from \"react\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {BrowserRouter as Route, Switch} from \"react-router-dom\";\nimport Slide from \"./Slide\";\nimport Titles from \"./Titles\";\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\nimport {useSwipeable} from \"react-swipeable\";\n\nconst init = initialValue => {\n  return {position: initialValue, anim: \"fade\"};\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"next\":\n      return {\n        ...state,\n        position: (state.position + 1) % action.numItems,\n        anim: \"right\"\n      };\n    case \"prev\":\n      return {\n        ...state,\n        position: (state.position - 1 + action.numItems) % action.numItems,\n        anim: \"left\"\n      };\n    case \"set\":\n      return {...state, position: action.position, anim: \"fade\"};\n    case \"reset\":\n      return init(0);\n    default:\n      throw new Error(\"Unexpected action\");\n  }\n};\n\nconst Slider = props => {\n  const {res, initialPos} = props;\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const animated = useTransitionEvent(false);\n  const swipeHandlers = useSwipeable({\n    onSwipedLeft: () => slide(\"next\"),\n    onSwipedRight: () => slide(\"prev\"),\n    onSwiping: () => setSwiping(1),\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n\n  const [swiping, setSwiping] = useState(0);\n  const [current, dispatch] = useReducer(reducer, initialPos, init);\n\n  useEffect(() => {\n    history.push({\n      pathname: res.records[current.position].path\n    });\n  }, [current.position, res, history]);\n\n  useEffect(() => {\n    const handleUserKeyPress = event => {\n      const {keyCode} = event;\n      if (keyCode === 37) slide(\"prev\");\n      if (keyCode === 39) slide(\"next\");\n    };\n    window.addEventListener(\"keydown\", handleUserKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyPress);\n    };\n  });\n\n  const slide = dir => {\n    setSwiping(0);\n    if (!animated.value) dispatch({type: dir, numItems: res.records.length});\n  };\n\n  const routes = res.records.map((slide, index) => {\n    return (\n      <Route key={index} exact path={slide.path}>\n        {<Slide {...slide} />}\n      </Route>\n    );\n  });\n\n  return (\n    <>\n      <Titles\n        slides={res.records}\n        label={res.records[current.position].fields.label}\n        dispatch={dispatch}\n      />\n\n      <div\n        className={\"slider \" + current.anim + \"-transition\"}\n        {...swipeHandlers}\n        onClick={e =>\n          !swiping\n            ? e.clientX < e.view.innerWidth / 2\n              ? slide(\"prev\")\n              : slide(\"next\")\n            : setSwiping(0)\n        }\n      >\n        <TransitionGroup>\n          <CSSTransition\n            key={location.key}\n            timeout={800}\n            classNames=\"slide\"\n            onEntering={animated.animStart}\n            onExited={animated.animEnd}\n            unmountOnExit\n          >\n            <Switch location={location} basename={process.env.PUBLIC_URL}>\n              {routes}\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n      </div>\n    </>\n  );\n};\n\nfunction useTransitionEvent(initialValue) {\n  const [value, setValue] = useState(initialValue);\n  function animStart() {\n    setValue(true);\n  }\n  function animEnd() {\n    setValue(false);\n  }\n  return {\n    value,\n    animStart: animStart,\n    animEnd: animEnd\n  };\n}\n\nexport default Slider;\n","import React, {Suspense, useState, useEffect, useRef} from \"react\";\nimport {useLocation} from \"react-router-dom\";\n\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport useFetch from \"fetch-suspense\";\nimport \"../App.scss\";\nimport Slider from \"./Slider\";\nimport {slugify} from \"../utils\";\nimport Spinner from \"./Spinner\";\n\nconst Fetch = () => {\n  let location = useLocation();\n\n  const res = useFetch(\"https://boiling-bastion-11005.herokuapp.com/\", {\n    method: \"GET\"\n  });\n\n  const mounted = useRef();\n  const [initialSlide, setInitialSlide] = useState(null);\n\n  useEffect(() => {\n    //componentDidMount\n    if (!mounted.current) {\n      res.records.forEach((element, index) => {\n        if (element.fields.title === undefined)\n          element.fields.title = \"v-\" + element.id;\n        element.path = \"/\" + slugify(element.fields.title);\n      });\n\n      const getPos = () => {\n        if (location.pathname !== \"/\") {\n          let pos = res.records.findIndex(k => k.path === location.pathname);\n          return pos >= 0 ? pos : 0;\n        } else {\n          return 0;\n        }\n      };\n      setInitialSlide(getPos());\n\n      mounted.current = true;\n    }\n  }, [location.pathname, res.records]);\n\n  return mounted.current ? (\n    <Slider res={res} initialPos={initialSlide} />\n  ) : null;\n};\n\nconst Main = () => {\n  return (\n    <>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Suspense\n          fallback={\n            <>\n              <div className=\"fixed top-left\">\n                <h1>Philippe Fragnière</h1>\n              </div>\n              <Spinner />\n            </>\n          }\n        >\n          <Fetch />\n        </Suspense>\n      </Router>\n    </>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <>\n      <Main />\n    </>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./fonts.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}