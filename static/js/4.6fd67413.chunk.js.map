{"version":3,"sources":["components/Slide.js"],"names":["Slide","id","prev","next","fields","slides","isAnimated","setDirection","muted","setSlideDisplayed","history","useHistory","location","useLocation","map","obj","index","slugify","label","pathname","length","className","key","onClick","undefined","e","event","clientX","view","innerWidth","push","state","video","url","playing","loop","playsinline","width","height","config","file","attributes","autoPlay","photo","src","thumbnails","large","alt"],"mappings":"+HAAA,2EA8GeA,UAvGf,YAQG,EAPDC,GAOE,IAGWC,EAAMC,EATnBC,EAMC,EANDA,OACAC,EAKC,EALDA,OACAC,EAIC,EAJDA,WACAC,EAGC,EAHDA,aAEAC,GACC,EAFDC,kBAEC,EADDD,OAEIE,EAAUC,cACVC,EAAWC,cA8Cf,OA3CAR,EAAOS,KAAI,SAACC,EAAKC,GAMf,MALI,IAAMC,YAAQF,EAAIX,OAAOc,SAAWN,EAASO,WACrCd,EAAOW,GACjBd,EAAOG,EAAOW,EAAQ,GAAKX,EAAOW,EAAQ,GAAKX,EAAOA,EAAOe,OAAS,GACtEjB,EAAOE,EAAOW,EAAQ,GAAKX,EAAOW,EAAQ,GAAKX,EAAO,IAEjD,QAsCP,oCACE,kBAAC,IAAD,KACE,4DAA6BD,EAAOc,QAEtC,yBAAKG,UAAU,SACb,yBACEA,UAAU,aACVC,IAAKlB,EAAOH,GACZsB,QAASjB,OAAakB,EAAY,SAAAC,GAzB1C,IAAqBC,KAyBsCD,GAxB/CE,QAAUD,EAAME,KAAKC,WAAa,GAC1CtB,EAAa,QACbG,EAAQoB,KAAK,CACXX,SAAU,IAAMF,YAAQf,EAAKE,OAAOc,OACpCa,MAAO,OAGTxB,EAAa,SACbG,EAAQoB,KAAK,CACXX,SAAU,IAAMF,YAAQd,EAAKC,OAAOc,OACpCa,MAAO,QAiBJ3B,EAAO4B,MACN,kBAAC,IAAD,CACEC,IAAK7B,EAAO4B,MAAM,GAAGC,IACrBC,SAAU5B,EACV6B,MAAM,EACNC,aAAa,EACbC,MAAM,OACNC,OAAO,OAEPjB,UAAU,4BACVkB,OAAQ,CACNC,KAAM,CACJC,WAAY,CACVC,UAAU,EACVlC,MAAOA,OAOb,KACHJ,EAAOuC,QAAUvC,EAAO4B,MACvB,kBAAC,IAAD,CACEY,IAAKxC,EAAOuC,MAAM,GAAGE,WAAWC,MAAMb,IACtCc,IAAK3C,EAAOc,QAEZ,KACFd,EAAO4B,OAAU5B,EAAOuC,MAAuB,KAAf","file":"static/js/4.6fd67413.chunk.js","sourcesContent":["import React from \"react\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {slugify} from \"../utils\";\nimport Img from \"./Img\";\nimport {Helmet} from \"react-helmet\";\nimport ReactPlayer from \"react-player\";\n\nfunction Slide({\n  id,\n  fields,\n  slides,\n  isAnimated,\n  setDirection,\n  setSlideDisplayed,\n  muted\n}) {\n  let history = useHistory();\n  let location = useLocation();\n  let current, prev, next;\n\n  slides.map((obj, index) => {\n    if (\"/\" + slugify(obj.fields.label) === location.pathname) {\n      current = slides[index];\n      prev = slides[index - 1] ? slides[index - 1] : slides[slides.length - 1];\n      next = slides[index + 1] ? slides[index + 1] : slides[0];\n    }\n    return null;\n  });\n\n  /*\n  React.useEffect(() => {\n    //for (var slide of [current, prev, next]) setSlideDisplayed(slide);\n    //preloadImg(prev, next);\n  }, [location]);\n\n  //preloadImg(prev, next);\n\n  function preloadImg() {\n    for (var img of arguments) {\n      if (img.fields && !img.displayed) {\n        console.log(\"preload\");\n        const temp_img = new Image();\n        temp_img.src = img.fields.photo[0].thumbnails.large.url;\n      }\n    }\n  }*/\n\n  function changeSlide(event) {\n    if (event.clientX < event.view.innerWidth / 2) {\n      setDirection(\"left\");\n      history.push({\n        pathname: \"/\" + slugify(prev.fields.label),\n        state: {}\n      });\n    } else {\n      setDirection(\"right\");\n      history.push({\n        pathname: \"/\" + slugify(next.fields.label),\n        state: {}\n      });\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Philippe Fragniere â€” {fields.label}</title>\n      </Helmet>\n      <div className=\"slide\">\n        <div\n          className=\"slide-item\"\n          key={fields.id}\n          onClick={isAnimated ? undefined : e => changeSlide(e)}\n          //  onMouseMove={e => mouseMove(e)}\n        >\n          {fields.video ? (\n            <ReactPlayer\n              url={fields.video[0].url}\n              playing={!isAnimated}\n              loop={true}\n              playsinline={true}\n              width=\"100%\"\n              height=\"100%\"\n              //onClick={unmute}\n              className=\"slide-visual loaded video\"\n              config={{\n                file: {\n                  attributes: {\n                    autoPlay: true,\n                    muted: muted\n                  }\n                }\n              }}\n              // onReady={e => handleOnReady())}\n              // onStart={e => console.log(\"start\")}\n            />\n          ) : null}\n          {fields.photo && !fields.video ? (\n            <Img\n              src={fields.photo[0].thumbnails.large.url}\n              alt={fields.label}\n            />\n          ) : null}\n          {!fields.video && !fields.photo ? \"No visuals\" : null}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Slide;\n"],"sourceRoot":""}